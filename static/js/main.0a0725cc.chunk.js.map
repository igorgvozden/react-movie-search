{"version":3,"sources":["components/navbar/Nav.js","components/results/Result.js","components/searchResults/SearchResults.js","components/pagination/Pagination.js","components/search/Search.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","Result","props","key","i","movie","Title","Year","Actors","Genre","Plot","SearchResults","getTitleParam","param","setState","titleParam","SortByTitle","sortParam","sortedByTitle","movies","sort","a","b","reverse","getYearsParam","yearsParam","sortByYear","sorted","Number","state","this","actors","genre","plot","tempMovies","filter","toLowerCase","includes","map","onClick","Component","Pagination","getTotalPages","totalPages","Math","ceil","totalResults","page","setTimeout","increasePage","decreasePage","Search","getMoviesInfo","imdbIDs","id","imdbID","movieDetails","info","fetch","then","response","json","data","push","moviesInfo","getMovies","year","title","firstPageToGet","movieCount","getTitle","e","target","value","getYear","getActors","getGenre","getPlot","increasedPage","decreasedPage","onKeyDown","onKeyPressed","tabIndex","htmlFor","onChange","type","maxLength","length","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a0725cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './nav.scss';\r\n\r\nfunction Nav () {\r\n    return (\r\n        <div className='nav'>\r\n            <div className='nav__logo'>\r\n                <h3 className='nav__logo-title'>Movies</h3>\r\n            </div>\r\n            <p className='nav__text'>Search our database and find info about any movie you can think of!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './result.scss';\r\n\r\nfunction Result(props) {\r\n    return (\r\n        <tr key={props.i}>\r\n            <td className='search-result search-result--title'>{props.movie.Title}</td>\r\n            <td className='search-result'>{props.movie.Year}</td>\r\n            <td className='search-result'>{props.movie.Actors}</td>\r\n            <td className='search-result'>{props.movie.Genre}</td>\r\n            <td className='search-result'>{props.movie.Plot}</td>\r\n        </tr>  \r\n    )\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\r\nimport './searchResults.scss';\r\nimport Result from '../results/Result';\r\n\r\nclass SearchResults extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            movies: [],\r\n            yearsParam: '',\r\n            titleParam: ''\r\n        }\r\n        \r\n    }\r\n\r\n    getTitleParam = (param) => {\r\n        this.setState({ titleParam: param });\r\n        this.SortByTitle(param);\r\n    }\r\n\r\n    SortByTitle = (sortParam) => {\r\n        let sortedByTitle = [];\r\n        sortedByTitle = this.props.movies;\r\n\r\n        if (sortParam === 'asc') {\r\n            sortedByTitle.sort((a, b) => (a.Title > b.Title) ? 1 : ((b.Title > a.Title) ? -1 : 0)); \r\n        }\r\n        if (sortParam === 'desc') {\r\n            sortedByTitle.sort((a, b) => (a.Title > b.Title) ? 1 : ((b.Title > a.Title) ? -1 : 0)).reverse();\r\n        }\r\n    }\r\n\r\n    getYearsParam = (param) => {\r\n        this.setState({ yearsParam: param });\r\n        this.sortByYear(param);\r\n    }\r\n\r\n    sortByYear = (sortParam) => {\r\n        let sorted = [];\r\n        sorted = this.props.movies;\r\n\r\n        if (sortParam === 'asc') {\r\n            sorted.sort(function(a, b) {\r\n                return Number(a.Year) - Number(b.Year);\r\n            });\r\n        }\r\n         if (sortParam === 'desc') {\r\n            sorted.sort(function(a, b) {\r\n                return Number(b.Year) - Number(a.Year);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { movies, actors, genre, plot } = this.props;\r\n        let tempMovies = movies;\r\n        \r\n        if (actors !== '' || genre !== '' || plot !== '') {\r\n            tempMovies = movies.filter(movie => movie.Actors.toLowerCase().includes(actors))\r\n            .filter(movie => movie.Genre.toLowerCase().includes(genre))\r\n            .filter(movie => movie.Plot.toLowerCase().includes(plot));\r\n            return (\r\n                <tbody>\r\n                    {\r\n                        tempMovies.map((movie, i) => <Result key={i} movie={movie} />)\r\n                    }\r\n                </tbody>\r\n            )  \r\n        } else {\r\n            return (\r\n                <tbody>\r\n                    <tr>\r\n                        <td className='search-results__table-data search-results__table-data--sort'>\r\n                            <p className='search-results__table-data__text-sort' onClick={ () => this.getTitleParam('asc') }>A .. Z</p>\r\n                            <p className='search-results__table-data__text-sort' onClick={ () => this.getTitleParam('desc') }>Z .. A</p>\r\n                        </td>\r\n                        <td className='search-results__table-data search-results__table-data--toggler'>\r\n                            <p className='search-results__table-data__arrow' onClick={ () => this.getYearsParam('asc') }>&#8679;</p>\r\n                            <p className='search-results__table-data__arrow' onClick={ () => this.getYearsParam('desc') }>&#8681;</p>\r\n                        </td>\r\n                        <td className='search-results__table-data'></td>\r\n                        <td className='search-results__table-data'></td>\r\n                        <td className='search-results__table-data'></td>\r\n                    </tr>\r\n                    {\r\n                        movies.map((movie, i) => <Result key={i} movie={movie} />)\r\n                    }\r\n                </tbody>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import React, { Component } from 'react';\r\nimport './pagination.scss';\r\n\r\nclass Pagination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: 1,\r\n            totalResults: null,\r\n            totalPages: 0\r\n        }\r\n    }\r\n\r\n    getTotalPages = () => {\r\n        this.setState({ totalPages: Math.ceil(this.props.totalResults/10) })\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.setState({ page: this.props.page });\r\n        setTimeout(() => {this.getTotalPages()}, 500)\r\n    }\r\n\r\n    render () {\r\n        const { page, increasePage, decreasePage, totalResults } = this.props;\r\n\r\n        if (totalResults === null) {\r\n            return (\r\n                <div className='pagination'>\r\n                <p className='pagination__total-results'>Movies found: { totalResults }</p>\r\n            </div>\r\n            )\r\n        } else if (page === 1) {\r\n            return (\r\n                <div className='pagination'>\r\n                    <p className='pagination__total-results'>Movies found: { totalResults }</p>\r\n                    <p className='pagination__page pagination__page--info'>You are on page { page }</p>\r\n                    <p className='pagination__page pagination__page--info'> { (totalResults != null)? `of ${ Math.ceil(this.props.totalResults/10) } total pages` : '' }</p>\r\n                    <p className='pagination__page' onClick={ increasePage } >Next &#8680;</p>\r\n                </div>\r\n            )\r\n        } else if (page === Math.ceil(this.props.totalResults/10)) {\r\n            return (\r\n                <div className='pagination'>\r\n                    <p className='pagination__total-results'>Movies found: { totalResults }</p>\r\n                    <p className='pagination__page' onClick={ decreasePage } >&#8678; Previous</p>\r\n                    <p className='pagination__page pagination__page--info'>You are on page { page }</p>\r\n                    <p className='pagination__page pagination__page--info'> { (totalResults != null)? `of ${ Math.ceil(this.props.totalResults/10) } total pages` : '' }</p>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className='pagination'>\r\n                    <p className='pagination__total-results'>Movies found: { totalResults }</p>\r\n                    <p className='pagination__page' onClick={ decreasePage } >&#8678; Previous</p>\r\n                    <p className='pagination__page pagination__page--info'>You are on page { page }</p>\r\n                    <p className='pagination__page pagination__page--info'> { (totalResults != null)? `of ${ Math.ceil(this.props.totalResults/10) } total pages` : '' }</p>\r\n                    <p className='pagination__page' onClick={ increasePage } >Next &#8680;</p>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Pagination;","import React, { Component, Fragment } from 'react';\r\nimport './search.scss';\r\nimport SearchResults from '../searchResults/SearchResults';\r\nimport Pagination from '../pagination/Pagination';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: null,\r\n            year: null,\r\n            actors: '',\r\n            genre: '',\r\n            plot: '',\r\n            movies: [],\r\n            moviesInfo: [],\r\n            movieCount: null,\r\n            page: 1,\r\n            firstPageToGet: 1\r\n        }\r\n    }\r\n\r\n    getMoviesInfo = () => {\r\n        let imdbIDs = this.state.movies.map(id => id.imdbID);\r\n        \r\n        let movieDetails = [];\r\n\r\n        imdbIDs.map(info => {\r\n            return (\r\n                fetch(`http://www.omdbapi.com/?i=${ info }&apikey=4ca8ee95`)\r\n                .then(response => response.json())\r\n                .then(data => movieDetails.push(data))\r\n                .then(this.setState({moviesInfo: movieDetails}))\r\n            )\r\n        });\r\n    }\r\n\r\n    getMovies = () => {\r\n        if (this.state.year != null) {\r\n            fetch(`http://www.omdbapi.com/?s=${this.state.title}&y=${ this.state.year }&page=${ this.state.firstPageToGet }&apikey=4ca8ee95`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ movies: data.Search });\r\n                    this.setState({ movieCount: data.totalResults });\r\n                })\r\n                .then(setTimeout(() => {this.getMoviesInfo()}, 500))\r\n                .then(setTimeout(() => {this.setState({state: this.state})}, 600))\r\n        } else {\r\n            fetch(`http://www.omdbapi.com/?s=${this.state.title}&page=${ this.state.page }&apikey=4ca8ee95`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ movies: data.Search });\r\n                    this.setState({ movieCount: data.totalResults });\r\n                })\r\n                .then(setTimeout(() => {this.getMoviesInfo()}, 500))\r\n                .then(setTimeout(() => {this.setState({state: this.state})}, 600))\r\n        } \r\n    }\r\n    \r\n    getTitle = (e) => {\r\n        this.setState({title: e.target.value})\r\n    }\r\n\r\n    getYear = (e) => {\r\n        this.setState({year: e.target.value})\r\n    }\r\n\r\n    getActors = (e) => {\r\n        this.setState({actors: e.target.value})\r\n    }\r\n\r\n    getGenre = (e) => {\r\n        this.setState({genre: e.target.value})\r\n    }\r\n\r\n    getPlot = (e) => {\r\n        this.setState({plot: e.target.value})\r\n    }\r\n\r\n    increasePage () {\r\n        let increasedPage = this.state.page + 1;\r\n        this.setState({ page: increasedPage });\r\n        setTimeout(() => {this.getMovies()}, 100);\r\n        setTimeout(() => {this.setState({state: this.state})}, 200)\r\n    }\r\n\r\n    decreasePage () {\r\n        let decreasedPage = this.state.page - 1;\r\n        this.setState({ page: decreasedPage });\r\n        setTimeout(() => {this.getMovies()}, 100);\r\n        setTimeout(() => {this.setState({state: this.state})}, 200)\r\n        \r\n    }\r\n\r\n    onKeyPressed(e) {\r\n        if (e.key === 'Enter') {\r\n            this.getMovies()\r\n        }\r\n      }\r\n\r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                <div className='search-results'  onKeyDown={(e) => this.onKeyPressed(e)} tabIndex=\"0\">\r\n                <label htmlFor='title' className='search-results__label'>Title</label>\r\n                <input onChange={ this.getTitle }\r\n                    type='text' id='title' className='search-results__input'/>\r\n\r\n                <label htmlFor='year' className='search-results__label'>Year</label>\r\n                <input onChange={ this.getYear }\r\n                    type='text' id='year' maxLength='4' className='search-results__input'/>\r\n\r\n                <label htmlFor='actors' className='search-results__label'>Actors</label>\r\n                <input onChange={ this.getActors }\r\n                    type='text' id='actors' className='search-results__input'/>\r\n\r\n                <label htmlFor='genre' className='search-results__label'>Genre</label>\r\n                <input onChange={ this.getGenre }\r\n                    type='text' id='genre' className='search-results__input'/>\r\n\r\n                <label htmlFor='plot' className='search-results__label'>Plot</label>\r\n                <input onChange={ this.getPlot }\r\n                    type='text' id='plot' className='search-results__input'/>\r\n\r\n                <p onClick={ this.getMovies } className='search-results__btn'>Search</p>\r\n            </div>\r\n            <h3 className='search-results__table-title'>Search results:</h3>\r\n            <table className='search-results__table'>\r\n                <thead>\r\n                    <tr className='search-results__table-row'>\r\n                        <th className='search-results__table-data'>Title</th>\r\n                        <th className='search-results__table-data'>Year</th>\r\n                        <th className='search-results__table-data'>Actors</th>\r\n                        <th className='search-results__table-data'>Genre</th>\r\n                        <th className='search-results__table-data'>Plot</th>\r\n                    </tr>\r\n                    </thead>\r\n                    {\r\n                        (this.state.moviesInfo.length > 0)\r\n                        ?\r\n                            <SearchResults movies={this.state.moviesInfo} actors={this.state.actors} genre={this.state.genre} plot={this.state.plot}/>\r\n                        :\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className='search-results__table-data'>-</td>\r\n                                <td className='search-results__table-data'>-</td>\r\n                                <td className='search-results__table-data'>-</td>\r\n                                <td className='search-results__table-data'>-</td>\r\n                                <td className='search-results__table-data'>-</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    }\r\n                </table>\r\n                <Pagination \r\n                    totalResults={this.state.movieCount} \r\n                    page={this.state.page} \r\n                    increasePage={ () => this.increasePage()} \r\n                    decreasePage={ () => this.decreasePage()}\r\n                />\r\n            </Fragment>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport './home.scss';\r\nimport Search from '../search/Search';\r\n\r\nclass Home extends Component {\r\n    render () {\r\n        return (\r\n            <div className='home'>\r\n                <Search />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport './App.scss';\nimport Nav from './components/navbar/Nav';\nimport Home from './components/home/Home';\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n  \n    this.state = {\n\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"app\">\n        <Nav />\n        <Home />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}